//
//  SettingsViewController.swift
//  MyCitiesChallenge
//
//  Created by Alejandro isai Acosta Martinez on 08/03/25.
//  Copyright (c) 2025 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This layer contains the UI logic (display, update, animate…)
//  and is responsible for intercepting the user’s action and
//  sending it to the Presenter. Most importantly, it has no business logic.
//
//  This file was generated by the IsaiinDev's iOS Templates so
//  you can apply Clean Architecture to your iOS projects.
//

import UIKit

protocol SettingsDisplayLogic: ViewLayer {
    func displayResetFavoritesSuccessfully()
    func displayFailure(message: String)
}

class SettingsViewController: UIViewController {
    
    // MARK: - Properties

    var interactor: SettingsBusinessLogic?

    // MARK: - Subviews
    
    /// A vertical stack view to hold settings UI components.
    private lazy var stackView: UIStackView = {
        let sv = UIStackView()
        sv.axis = .vertical
        sv.spacing = 16
        sv.alignment = .fill
        sv.distribution = .fillEqually
        sv.translatesAutoresizingMaskIntoConstraints = false
        return sv
    }()

    /// Label to display app version information.
    private lazy var appInfoLabel: UILabel = {
        let label = UILabel()
        label.text = "App Version: 1.0.0"
        label.textAlignment = .center
        label.font = UIFont.systemFont(ofSize: 16)
        label.translatesAutoresizingMaskIntoConstraints = false
        return label
    }()

    /// Button to reset favorites.
    private lazy var resetFavoritesButton: UIButton = {
        let button = UIButton(type: .system)
        button.setTitle("Reset Favorites", for: .normal)
        button.addTarget(self, action: #selector(resetFavoritesTapped), for: .touchUpInside)
        button.translatesAutoresizingMaskIntoConstraints = false
        return button
    }()

    /// Button to send feedback.
    private lazy var sendFeedbackButton: UIButton = {
        let button = UIButton(type: .system)
        button.setTitle("Send Feedback", for: .normal)
        button.addTarget(self, action: #selector(sendFeedbackTapped), for: .touchUpInside)
        button.translatesAutoresizingMaskIntoConstraints = false
        return button
    }()


    // MARK: - Object Lifecycle

    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
    }

    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
    }

    // MARK: - View Lifecycle

    override func viewDidLoad() {
        super.viewDidLoad()
        self.setupView()
        self.setupConstraints()
    }

    // MARK: - Setup

    private func setupView() {
        self.title = "Settings"
        view.backgroundColor = .white
        navigationController?.navigationBar.prefersLargeTitles = true
        
        stackView.addArrangedSubview(appInfoLabel)
        stackView.addArrangedSubview(resetFavoritesButton)
        stackView.addArrangedSubview(sendFeedbackButton)
        view.addSubview(stackView)
    }

    private func setupConstraints() {
        NSLayoutConstraint.activate([
            stackView.topAnchor.constraint(equalTo: view.safeAreaLayoutGuide.topAnchor, constant: 20),
            stackView.leadingAnchor.constraint(equalTo: view.leadingAnchor, constant: 16),
            stackView.trailingAnchor.constraint(equalTo: view.trailingAnchor, constant: -16),
            stackView.heightAnchor.constraint(equalToConstant: 150)
        ])
    }

    // MARK: - Actions
    
    /// Action for reset favorites button tap.
    @objc private func resetFavoritesTapped() {
        interactor?.resetFavorites()
    }

    /// Action for send feedback button tap.
    @objc private func sendFeedbackTapped() {
        let alert = UIAlertController(
            title: "Feedback",
            message: "This is a sample feedback functionality. In a real app, you would be able to send feedback. By the way, I'd be thrilled if you hired me!",
            preferredStyle: .alert
        )
        alert.addAction(UIAlertAction(title: "OK", style: .default, handler: nil))
        present(alert, animated: true, completion: nil)
    }

}

// MARK: - Display Logic

extension SettingsViewController: SettingsDisplayLogic {
    func displayResetFavoritesSuccessfully() {
        let alert = UIAlertController(title: "Success", message: "Favorites have been reset.", preferredStyle: .alert)
        alert.addAction(UIAlertAction(title: "OK", style: .default, handler: nil))
        present(alert, animated: true, completion: nil)
    }

    func displayFailure(message: String) {
        print("Something went wrong: \(message)")
    }
}
