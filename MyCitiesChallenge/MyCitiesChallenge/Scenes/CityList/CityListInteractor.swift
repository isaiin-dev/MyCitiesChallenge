//
//  CityListInteractor.swift
//  MyCitiesChallenge
//
//  Created by Alejandro isai Acosta Martinez on 05/03/25.
//  Copyright (c) 2025 ___ORGANIZATIONNAME___. All rights reserved.
//
//  The interactor is responsible for managing data from the model layer 
//  (note that Model is not part of the VIPER architecture, feel free to 
//  implement it or not, but for sure it will make our app more concise).
//
//  This file was generated by the IsaiinDev's iOS Templates so
//  you can apply clean architecture to your iOS projects.
//

import Foundation

protocol CityListBusinessLogic {
    func requestSomething(request: CityList.SomeUseCase.Request)
    func userInteractionInSomewhere()
}

final class CityListInteractor: Interactor, CityListBusinessLogic {
   
    // MARK: - Properties

    var presenter: CityListPresentationLogic?
    var router: CityListRoutingLogic?
    let worker = CityListWorker()

    // MARK: - Business Logic

    func requestSomething(request: CityList.SomeUseCase.Request) {
        let response = worker.doSomeWork()

        if response {
            presenter?.presentSuccess(response: CityList.SomeUseCase.Response())
        } else {
            presenter?.presentFailure(message: "Error in response")
        }
    }

    // MARK: - Routing Logic

    func userInteractionInSomewhere() {
        router?.routeToSomewhere()
    }
}
